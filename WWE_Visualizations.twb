<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='WWE_Visualizations' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='wwe_cln (earthquake_historical_data)' inline='true' name='federated.02orwg31hd08q31g8bl8o1p826c7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.1gfqv971moxqfn1du187c0gi32kc'>
            <connection authentication='username-password' class='postgres' dbname='earthquake_historical_data' one-time-sql='' port='5432' server='localhost' username='postgres' workgroup-auth-mode='as-is' />
          </named-connection>
          <named-connection caption='countries of the world' name='textscan.1gftn0r19rrdl319z69mz0ho36ir'>
            <connection class='textscan' directory='C:/Users/18587/OneDrive/Documents/Data Analytics Immersive/worldwide_earthquake' filename='countries of the world.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1gfqv971moxqfn1du187c0gi32kc' name='wwe_cln' table='[public].[wwe_cln]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.1gfqv971moxqfn1du187c0gi32kc' name='wwe_cln' table='[public].[wwe_cln]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>129</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp_column</remote-name>
            <remote-type>135</remote-type>
            <local-name>[timestamp_column]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>timestamp_column</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mag</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mag]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>mag</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>depth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[depth]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>depth</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[wwe_cln]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[wwe_cln_14D6597829AF4419AADF6415D73D587B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Magnitude Grouped' datatype='string' name='[Calculation_2238289016496164866]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [mag] &gt;= 7 THEN &apos;Major&apos;&#13;&#10;ELSEIF [mag] &gt;= 5 AND [mag]&lt; 7 THEN &apos;Mid Impact&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
        <aliases>
          <alias key='&quot;Low&quot;' value='Low (&lt;5)' />
          <alias key='&quot;Major&quot;' value='Major (7+ )' />
          <alias key='&quot;Mid Impact&quot;' value='Mid Impact (5 - 6.99)' />
        </aliases>
      </column>
      <column caption='Depth Cat' datatype='string' name='[Calculation_2238289016808878084]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [depth] &lt;= 70 THEN &apos;Shallow&apos;&#13;&#10;ELSEIF [depth] &lt;300 THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Deep&apos;&#13;&#10;END' />
      </column>
      <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='[timestamp_column]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='wwe_cln' datatype='table' name='[__tableau_internal_object_id__].[wwe_cln_14D6597829AF4419AADF6415D73D587B]' role='measure' type='quantitative' />
      <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
      <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
      <column-instance column='[depth]' derivation='Attribute' name='[attr:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Avg' name='[avg:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Avg' name='[avg:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Count' name='[cnt:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Count' name='[cnt:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Median' name='[med:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2238289016496164866]' derivation='None' name='[none:Calculation_2238289016496164866:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2238289016808878084]' derivation='None' name='[none:Calculation_2238289016808878084:nk]' pivot='key' type='nominal' />
      <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[depth]' derivation='Sum' name='[sum:depth:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mag]' derivation='Sum' name='[sum:mag:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
      <group caption='Action (YEAR(Year))' hidden='true' name='[Action (YEAR(Year))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Yeart))' hidden='true' name='[Action (YEAR(Yeart))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/18587/OneDrive/Documents/My Tableau Repository/Datasources/wwe_cln (earthquake_historical_data).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/08/2023 09:13:07 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='wwe_cln (earthquake_historical_data)' increment-value='%null%' refresh-type='create' rows-inserted='599487' timestamp-start='2023-03-08 21:11:50.268' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>129</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>wwe_cln</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>599487</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp_column</remote-name>
              <remote-type>135</remote-type>
              <local-name>[timestamp_column]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp_column</remote-alias>
              <ordinal>1</ordinal>
              <family>wwe_cln</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>599487</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mag</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mag]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mag</remote-alias>
              <ordinal>2</ordinal>
              <family>wwe_cln</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>626</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>depth</remote-name>
              <remote-type>5</remote-type>
              <local-name>[depth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>depth</remote-alias>
              <ordinal>3</ordinal>
              <family>wwe_cln</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>30820</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>4</ordinal>
              <family>wwe_cln</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>278579</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>5</ordinal>
              <family>wwe_cln</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>362133</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[sum:mag:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[avg:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[med:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[sum:depth:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[avg:mag:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2238289016496164866:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Low&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mid Impact&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Major&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2238289016808878084:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Deep&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shallow&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Medium&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='wwe_cln' id='wwe_cln_14D6597829AF4419AADF6415D73D587B'>
            <properties context=''>
              <relation connection='postgres.1gfqv971moxqfn1du187c0gi32kc' name='wwe_cln' table='[public].[wwe_cln]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='countries of the world' inline='true' name='federated.08bubmt0lfvgw4176hd5h1a8ffy7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='countries of the world' name='textscan.06u4xvl1bnvvds11aopux144rr16'>
            <connection class='textscan' directory='C:/Users/18587/OneDrive/Documents/Data Analytics Immersive/worldwide_earthquake' filename='countries of the world.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.06u4xvl1bnvvds11aopux144rr16' name='countries of the world.csv' table='[countries of the world#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Area (sq. mi.)' ordinal='3' />
            <column datatype='string' name='Pop. Density (per sq. mi.)' ordinal='4' />
            <column datatype='string' name='Coastline (coast/area ratio)' ordinal='5' />
            <column datatype='string' name='Net migration' ordinal='6' />
            <column datatype='string' name='Infant mortality (per 1000 births)' ordinal='7' />
            <column datatype='integer' name='GDP ($ per capita)' ordinal='8' />
            <column datatype='string' name='Literacy (%)' ordinal='9' />
            <column datatype='string' name='Phones (per 1000)' ordinal='10' />
            <column datatype='string' name='Arable (%)' ordinal='11' />
            <column datatype='string' name='Crops (%)' ordinal='12' />
            <column datatype='string' name='Other (%)' ordinal='13' />
            <column datatype='integer' name='Climate' ordinal='14' />
            <column datatype='string' name='Birthrate' ordinal='15' />
            <column datatype='string' name='Deathrate' ordinal='16' />
            <column datatype='string' name='Agriculture' ordinal='17' />
            <column datatype='string' name='Industry' ordinal='18' />
            <column datatype='string' name='Service' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.06u4xvl1bnvvds11aopux144rr16' name='countries of the world.csv' table='[countries of the world#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='string' name='Region' ordinal='1' />
            <column datatype='integer' name='Population' ordinal='2' />
            <column datatype='integer' name='Area (sq. mi.)' ordinal='3' />
            <column datatype='string' name='Pop. Density (per sq. mi.)' ordinal='4' />
            <column datatype='string' name='Coastline (coast/area ratio)' ordinal='5' />
            <column datatype='string' name='Net migration' ordinal='6' />
            <column datatype='string' name='Infant mortality (per 1000 births)' ordinal='7' />
            <column datatype='integer' name='GDP ($ per capita)' ordinal='8' />
            <column datatype='string' name='Literacy (%)' ordinal='9' />
            <column datatype='string' name='Phones (per 1000)' ordinal='10' />
            <column datatype='string' name='Arable (%)' ordinal='11' />
            <column datatype='string' name='Crops (%)' ordinal='12' />
            <column datatype='string' name='Other (%)' ordinal='13' />
            <column datatype='integer' name='Climate' ordinal='14' />
            <column datatype='string' name='Birthrate' ordinal='15' />
            <column datatype='string' name='Deathrate' ordinal='16' />
            <column datatype='string' name='Agriculture' ordinal='17' />
            <column datatype='string' name='Industry' ordinal='18' />
            <column datatype='string' name='Service' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Area (sq. mi.)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Area (sq. mi.)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Area (sq. mi.)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop. Density (per sq. mi.)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pop. Density (per sq. mi.)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Pop. Density (per sq. mi.)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coastline (coast/area ratio)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Coastline (coast/area ratio)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Coastline (coast/area ratio)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Net migration</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Net migration]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Net migration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant mortality (per 1000 births)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Infant mortality (per 1000 births)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Infant mortality (per 1000 births)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP ($ per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP ($ per capita)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>GDP ($ per capita)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Literacy (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Literacy (%)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Literacy (%)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Phones (per 1000)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Phones (per 1000)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Phones (per 1000)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arable (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Arable (%)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Arable (%)</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Crops (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Crops (%)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Crops (%)</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other (%)</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Other (%)]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Other (%)</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Climate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Climate]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Climate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Birthrate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Birthrate]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Birthrate</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deathrate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Deathrate]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Deathrate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Agriculture</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Agriculture]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Agriculture</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Industry]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Industry</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Service</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Service]</local-name>
            <parent-name>[countries of the world.csv]</parent-name>
            <remote-alias>Service</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='GDP World Bank Classification' datatype='string' name='[Calculation_2238289016817356805]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [GDP ($ per capita)] &gt;= 12536 THEN &apos;High Income&apos;&#13;&#10;ELSEIF [GDP ($ per capita)] &gt;= 4046 THEN &apos;Upper-Middle Income&apos;&#13;&#10;ELSEIF [GDP ($ per capita)] &gt;= 1036 THEN &apos;Lower-Middle Income&apos;&#13;&#10;ELSE &apos;Low Income&apos;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[GDP ($ per capita)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Literacy (%)]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='countries of the world.csv' datatype='table' name='[__tableau_internal_object_id__].[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2238289016817356805]' derivation='None' name='[none:Calculation_2238289016817356805:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[GDP ($ per capita)]' derivation='None' name='[none:GDP ($ per capita):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Literacy (%)]' derivation='None' name='[none:Literacy (%):nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Country,GDP ($ per capita),Literacy (%))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:GDP ($ per capita):qk]' />
          <groupfilter function='level-members' level='[none:Literacy (%):nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/18587/OneDrive/Documents/My Tableau Repository/Datasources/countries of the world.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/08/2023 09:26:42 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='countries of the world' increment-value='%null%' refresh-type='create' rows-inserted='227' timestamp-start='2023-03-08 21:26:41.048' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>0</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>227</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>1</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>2</ordinal>
              <family>countries of the world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>227</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Area (sq. mi.)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Area (sq. mi.)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Area (sq. mi.)</remote-alias>
              <ordinal>3</ordinal>
              <family>countries of the world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>226</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pop. Density (per sq. mi.)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pop. Density (per sq. mi.)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Pop. Density (per sq. mi.)</remote-alias>
              <ordinal>4</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Coastline (coast/area ratio)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Coastline (coast/area ratio)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Coastline (coast/area ratio)</remote-alias>
              <ordinal>5</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Net migration</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Net migration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Net migration</remote-alias>
              <ordinal>6</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>158</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infant mortality (per 1000 births)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Infant mortality (per 1000 births)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infant mortality (per 1000 births)</remote-alias>
              <ordinal>7</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GDP ($ per capita)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[GDP ($ per capita)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>GDP ($ per capita)</remote-alias>
              <ordinal>8</ordinal>
              <family>countries of the world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>131</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Literacy (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Literacy (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Literacy (%)</remote-alias>
              <ordinal>9</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>141</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Phones (per 1000)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Phones (per 1000)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Phones (per 1000)</remote-alias>
              <ordinal>10</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>215</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Arable (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Arable (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Arable (%)</remote-alias>
              <ordinal>11</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>204</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Crops (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Crops (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Crops (%)</remote-alias>
              <ordinal>12</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>163</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Other (%)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Other (%)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Other (%)</remote-alias>
              <ordinal>13</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Climate</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Climate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Climate</remote-alias>
              <ordinal>14</ordinal>
              <family>countries of the world.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Birthrate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Birthrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Birthrate</remote-alias>
              <ordinal>15</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>221</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deathrate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Deathrate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deathrate</remote-alias>
              <ordinal>16</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>202</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Agriculture</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Agriculture]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Agriculture</remote-alias>
              <ordinal>17</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>151</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Industry</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Industry]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Industry</remote-alias>
              <ordinal>18</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>156</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Service</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Service]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Service</remote-alias>
              <ordinal>19</ordinal>
              <family>countries of the world.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>168</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2238289016817356805:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;High Income&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Upper-Middle Income&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Low Income&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Lower-Middle Income&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;USA&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='countries of the world.csv' id='countries of the world.csv_AE9BBA29B04E45DBB633E06855B4AE82'>
            <properties context=''>
              <relation connection='textscan.06u4xvl1bnvvds11aopux144rr16' name='countries of the world.csv' table='[countries of the world#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Country' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                  <column datatype='integer' name='Population' ordinal='2' />
                  <column datatype='integer' name='Area (sq. mi.)' ordinal='3' />
                  <column datatype='string' name='Pop. Density (per sq. mi.)' ordinal='4' />
                  <column datatype='string' name='Coastline (coast/area ratio)' ordinal='5' />
                  <column datatype='string' name='Net migration' ordinal='6' />
                  <column datatype='string' name='Infant mortality (per 1000 births)' ordinal='7' />
                  <column datatype='integer' name='GDP ($ per capita)' ordinal='8' />
                  <column datatype='string' name='Literacy (%)' ordinal='9' />
                  <column datatype='string' name='Phones (per 1000)' ordinal='10' />
                  <column datatype='string' name='Arable (%)' ordinal='11' />
                  <column datatype='string' name='Crops (%)' ordinal='12' />
                  <column datatype='string' name='Other (%)' ordinal='13' />
                  <column datatype='integer' name='Climate' ordinal='14' />
                  <column datatype='string' name='Birthrate' ordinal='15' />
                  <column datatype='string' name='Deathrate' ordinal='16' />
                  <column datatype='string' name='Agriculture' ordinal='17' />
                  <column datatype='string' name='Industry' ordinal='18' />
                  <column datatype='string' name='Service' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
      <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
      <column-instance column='[id]' derivation='None' name='[none:id:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='federated.08bubmt0lfvgw4176hd5h1a8ffy7'>
      <column datatype='string' name='[Coastline (coast/area ratio)]' role='dimension' type='nominal' />
      <column-instance column='[Coastline (coast/area ratio)]' derivation='None' name='[none:Coastline (coast/area ratio):nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='federated.02orwg31hd08q31g8bl8o1p826c7' target='federated.08bubmt0lfvgw4176hd5h1a8ffy7'>
      <column-mapping>
        <map key='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]' value='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Coastline (coast/area ratio):nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_378AFF16D3C44E53B817E021A7D098F7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='total_eq_bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_CD8DDABC8A3A4C6B9D924E89EAD7A110]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final' type='sheet' worksheet='Sheet 1 (2)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4_17629FC20A514CAB987ABB6AB26F75D0]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final' type='sheet' worksheet='total_eq_bar (3)' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_5E7200DFFD0D4055B0B9A5F7120E2111]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Final' type='sheet' worksheet='total_eq_bar' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Final' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='EQ_BAr'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Earthquake Numbers by Type</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Magnitude Grouped' datatype='string' name='[Calculation_2238289016496164866]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [mag] &gt;= 7 THEN &apos;Major&apos;&#13;&#10;ELSEIF [mag] &gt;= 5 AND [mag]&lt; 7 THEN &apos;Mid Impact&apos;&#13;&#10;ELSE &apos;Low&apos;&#13;&#10;END' />
              <aliases>
                <alias key='&quot;Low&quot;' value='Low (&lt;5)' />
                <alias key='&quot;Major&quot;' value='Major (7+ )' />
                <alias key='&quot;Mid Impact&quot;' value='Mid Impact (5 - 6.99)' />
              </aliases>
            </column>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2238289016496164866]' derivation='None' name='[none:Calculation_2238289016496164866:nk]' pivot='key' type='nominal' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year-Trunc' name='[tyr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year-Trunc' name='[tyr:Timestamp Column (copy)_2238289015424241665:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]' direction='ASC' using='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]' field-type='quantitative' reverse='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Magnitude Grouped:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Year of Yeart:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:ok]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Id:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='145'>
            <formatted-text>
              <run fontcolor='#787878'>Magnitude: </run>
              <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Year of Year: </run>
              <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Count of Id: </run>
              <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]</field>
                      <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]</field>
                      <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:ok]</field>
                      <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>31092</value>
                    <value>&quot;Low&quot;</value>
                    <value>#2008-01-01 00:00:00#</value>
                    <value>#2008-01-01 00:00:00#</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='183' y='119' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{15ABA660-DD90-4C7C-9ABB-73767242D50A}' />
    </worksheet>
    <worksheet name='Sheet 1 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>High Magnitude v Low Depth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Depth Cat' datatype='string' name='[Calculation_2238289016808878084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [depth] &lt;= 70 THEN &apos;Shallow&apos;&#13;&#10;ELSEIF [depth] &lt;300 THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Deep&apos;&#13;&#10;END' />
            </column>
            <column-instance column='[depth]' derivation='Attribute' name='[attr:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timestamp_column]' derivation='Attribute' name='[attr:timestamp_column:ok]' pivot='key' type='ordinal' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2238289016808878084]' derivation='None' name='[none:Calculation_2238289016808878084:nk]' pivot='key' type='nominal' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timestamp_column]' derivation='None' name='[none:timestamp_column:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]'>
            <groupfilter function='member' level='[none:Calculation_2238289016808878084:nk]' member='&quot;Shallow&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' included-values='in-range-or-null'>
            <min>#2000-01-01 01:19:26#</min>
            <max>#2023-02-12 22:53:27#</max>
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' field-type='quantitative' max='37750297.307096973' min='2305643.4007999208' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' field-type='quantitative' max='10150010.767988149' min='-9447374.870151002' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' field-type='quantitative' fold='true' max='10150010.767988149' min='-9447374.870151002' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' field-type='quantitative' fold='true' max='37750297.307096973' min='2305643.4007999208' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' palette='orange_gold_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]' palette='blue_10_0' reverse='true' type='interpolated' />
            <encoding attr='size' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]' field-type='quantitative' max-size='1' min-size='0' reverse='true' type='rangesize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' value='Mag'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Mag</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' value='Depth Cat'>
              <formatted-text>
                <run bold='true' fontalignment='1'>Depth Cat</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:timestamp_column:ok]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' />
              <size column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' />
              <tooltip column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:timestamp_column:ok]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.7292816638946533' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' />
              <size column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]' />
              <tooltip column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:timestamp_column:ok]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1754143238067627' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk] + [federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk])</rows>
        <cols>([federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk] + [federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk])</cols>
      </table>
      <simple-id uuid='{18FABF18-3484-4508-9C7E-6086CD54979D}' />
    </worksheet>
    <worksheet name='gdp_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>GDP by Country Segmented</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='countries of the world' name='federated.08bubmt0lfvgw4176hd5h1a8ffy7' />
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.08bubmt0lfvgw4176hd5h1a8ffy7'>
            <column caption='GDP World Bank Classification' datatype='string' name='[Calculation_2238289016817356805]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [GDP ($ per capita)] &gt;= 12536 THEN &apos;High Income&apos;&#13;&#10;ELSEIF [GDP ($ per capita)] &gt;= 4046 THEN &apos;Upper-Middle Income&apos;&#13;&#10;ELSEIF [GDP ($ per capita)] &gt;= 1036 THEN &apos;Lower-Middle Income&apos;&#13;&#10;ELSE &apos;Low Income&apos;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[GDP ($ per capita)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Literacy (%)]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pop. Density (per sq. mi.)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2238289016817356805]' derivation='None' name='[none:Calculation_2238289016817356805:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP ($ per capita)]' derivation='None' name='[none:GDP ($ per capita):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Literacy (%)]' derivation='None' name='[none:Literacy (%):nk]' pivot='key' type='nominal' />
            <column-instance column='[Pop. Density (per sq. mi.)]' derivation='None' name='[none:Pop. Density (per sq. mi.):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Exclusions (Country,GDP ($ per capita),Literacy (%))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:GDP ($ per capita):qk]' />
                <groupfilter function='level-members' level='[none:Literacy (%):nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='%null%' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Western Sahara &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='500' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;31,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sierra Leone &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;37,8&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Somalia &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='600' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gaza Strip &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;51,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burundi &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;62,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malawi &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;78,2&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tanzania &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='700' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;36,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;42,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ethiopia &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;56,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Comoros &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;58,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;65,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Congo, Dem. Rep. &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='800' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;West Bank &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;17,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Niger &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;42,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea-Bissau &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;50,2&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;68,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Madagascar &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;80,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zambia &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='900' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;46,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mali &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;68,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nigeria &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;57,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liberia &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;85,1&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kenya &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1100' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;26,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Burkina Faso &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;40,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Benin &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;51,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Central African Rep. &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1200' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;47,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Chad &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;47,8&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mozambique &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;79,3&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sao Tome &amp; Principe &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1300' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;67,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;70,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Rwanda &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1400' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;50,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cote d&apos;Ivoire &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;69,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uganda &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1500' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;40,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;60,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Togo &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;40,2&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Senegal &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1700' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;40,1&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia, The &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,3&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1800' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;41,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritania &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;79,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cameroon &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,1&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Moldova &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='1900' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;42,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Angola &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;61,1&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sudan &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;90,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Zimbabwe &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='2100' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;35,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guinea &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;45,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='2200' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;74,8&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ghana &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;93,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Serbia &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='2500' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saint Helena &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='2600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mayotte &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='2700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;85,7&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Equatorial Guinea &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='3000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;84,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lesotho &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='3300' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;76,9&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='3400' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='3500' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='4000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;51,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Morocco &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;57,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='4300' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;91,3&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='4500' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;86,5&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Albania &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='4800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;87,4&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='4900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;81,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Swaziland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='5400' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,7&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ukraine &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='5500' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;63,2&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gabon &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='5800' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;88,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Reunion &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkmenistan &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;70,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Algeria &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6100' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bosnia &amp; Herzegovina &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belarus &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6300' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,4&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6400' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;82,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Libya &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6700' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macedonia &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;86,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='6900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;74,2&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tunisia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='7000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;79,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,4&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Romania &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='7200' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;84,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Namibia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='7600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bulgaria &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='7800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;58,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Seychelles &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='8900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='9000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;79,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Botswana &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='10200' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latvia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='10600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,5&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Croatia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='10700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;86,4&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;South Africa &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='11100' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='11400' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;85,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mauritius &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,6&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lithuania &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='11800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;78,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='12300' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Estonia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='13100' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;75,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='13300' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovakia &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='13900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,4&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hungary &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='15700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,9&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Czech Republic &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='16900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;89,1&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='17700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;92,8&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Malta &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='18000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;93,3&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='19000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Andorra &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;83,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,7&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Slovenia &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='19200' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cyprus &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='19800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;95,4&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='20000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greenland &quot;' />
                          <groupfilter function='member' level='[none:Country:nk]' member='&quot;Guernsey &quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,5&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Greece &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='21000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Isle of Man &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='21500' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;82,5&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='22000' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Faroe Islands &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,9&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Spain &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='23200' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;77,9&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Arab Emirates &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='24800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='%null%' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jersey &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='25000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Liechtenstein &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='26700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,6&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='26800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='27000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Monaco &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='27400' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Finland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='27600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;France &quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='27700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='28600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='29100' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='29600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Ireland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='29800' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Canada &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='30000' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;98,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='30900' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,9&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iceland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='31100' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Denmark &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='32700' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;99,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Switzerland &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='34600' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;96,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;San Marino &quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='37800' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;Norway &quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;97,0&quot;' />
                        <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States &quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:GDP ($ per capita):qk]' member='55100' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Literacy (%):nk]' member='&quot;100,0&quot;' />
                      <groupfilter function='member' level='[none:Country:nk]' member='&quot;Luxembourg &quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:GDP ($ per capita):qk]' />
                  <hierarchy name='[none:Literacy (%):nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Longitude (generated)]' included-values='non-null' />
          <manual-sort column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;High Income&quot;</bucket>
              <bucket>&quot;Upper-Middle Income&quot;</bucket>
              <bucket>&quot;Lower-Middle Income&quot;</bucket>
              <bucket>&quot;Low Income&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Latitude (generated)]</column>
            <column>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Longitude (generated)]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]</column>
            <column>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Exclusions (Country,GDP ($ per capita),Literacy (%))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Latitude (generated)]' field-type='quantitative' max='11149681.407093547' min='-10449447.580006316' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Longitude (generated)]' field-type='quantitative' max='74305068.971979588' min='49417025.192407526' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:GDP ($ per capita):qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Country:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]' />
              <lod column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Country:nk]' />
              <lod column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Literacy (%):nk]' />
              <lod column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Pop. Density (per sq. mi.):nk]' />
              <geometry column='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.0386741161346436' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Latitude (generated)]</rows>
        <cols>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A56A20E1-84E3-47D5-ACA5-23569E2EC5B3}' />
    </worksheet>
    <worksheet name='total_count'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total 7.0 Earthquakes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' user:ui-action-filter='[Action1_378AFF16D3C44E53B817E021A7D098F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='100' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{E0009CA8-9392-4740-8A57-352346B3A1D4}' />
    </worksheet>
    <worksheet name='total_eq'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timestamp_column]' derivation='Attribute' name='[attr:timestamp_column:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timestamp_column]' derivation='None' name='[none:timestamp_column:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[Action (YEAR(Year))]'>
            <groupfilter function='level-members' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' user:ui-action-filter='[Action1_378AFF16D3C44E53B817E021A7D098F7]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range-or-null'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' included-values='all' />
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[Action (YEAR(Year))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' field-type='quantitative' max='37789590.348033793' min='143659.54620497487' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' field-type='quantitative' max='14850765.502177471' min='-8424217.6288198698' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' />
              <size column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' />
              <tooltip column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:timestamp_column:ok]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{1A84DEEA-747C-4FC2-8787-008852E4DC5E}' />
    </worksheet>
    <worksheet name='total_eq (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Earthquakes by Density</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mag]' derivation='Attribute' name='[attr:mag:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column-instance column='[timestamp_column]' derivation='None' name='[none:timestamp_column:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range-or-null'>
            <min>2.1200000000000001</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' included-values='in-range'>
            <min>#2000-01-08 16:47:20#</min>
            <max>#2023-02-06 10:24:49#</max>
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' field-type='quantitative' max='44177796.627751276' min='-9431041.081566073' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]' field-type='quantitative' max='19878965.117917087' min='-25098612.549601074' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='density-intensity' value='0.40082263946533203' />
                <encoding attr='density-color' palette='tableau-map-temperatur' type='interpolated' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='1136' />
                <format attr='maxheight' value='1136' />
                <format attr='minwidth' value='1354' />
                <format attr='maxwidth' value='1354' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{4201817C-3352-4C9D-B847-B74F95135D46}' />
    </worksheet>
    <worksheet name='total_eq_bar'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='Count' name='[cnt:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='string' name='[id]' role='dimension' type='nominal' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]'>
            <groupfilter function='level-members' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]' scope='cols' value='Count' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' value='36' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:id:qk]</cols>
      </table>
      <simple-id uuid='{C9B7A0BF-E928-4BFF-8068-EB72A2016773}' />
    </worksheet>
    <worksheet name='total_eq_bar (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>All Earthquakes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Depth Cat' datatype='string' name='[Calculation_2238289016808878084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [depth] &lt;= 70 THEN &apos;Shallow&apos;&#13;&#10;ELSEIF [depth] &lt;300 THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Deep&apos;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2238289016808878084]' derivation='None' name='[none:Calculation_2238289016808878084:nk]' pivot='key' type='nominal' />
            <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>2.1200000000000001</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='11' />
            <format attr='background-color' value='#f5f0ef' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</cols>
      </table>
      <simple-id uuid='{90B21442-A178-44E4-AF8B-4D8DC4D1117F}' />
    </worksheet>
    <worksheet name='total_eq_bar (4)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>7.0+ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Depth Cat' datatype='string' name='[Calculation_2238289016808878084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [depth] &lt;= 70 THEN &apos;Shallow&apos;&#13;&#10;ELSEIF [depth] &lt;300 THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Deep&apos;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2238289016808878084]' derivation='None' name='[none:Calculation_2238289016808878084:nk]' pivot='key' type='nominal' />
            <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</cols>
      </table>
      <simple-id uuid='{AD721A0C-109A-4CE3-9DAD-B1CB218BB02D}' />
    </worksheet>
    <worksheet name='total_eq_bar (5)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>7.0+ Depth Distribution</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
          </datasources>
          <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
            <column caption='Depth Cat' datatype='string' name='[Calculation_2238289016808878084]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [depth] &lt;= 70 THEN &apos;Shallow&apos;&#13;&#10;ELSEIF [depth] &lt;300 THEN &apos;Medium&apos;&#13;&#10;ELSE &apos;Deep&apos;&#13;&#10;END' />
            </column>
            <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
              <calculation class='tableau' formula='[timestamp_column]' />
            </column>
            <column-instance column='[Calculation_2238289016808878084]' derivation='Count' name='[cnt:Calculation_2238289016808878084:qk]' pivot='key' type='quantitative' />
            <column caption='Depth' datatype='real' name='[depth]' role='measure' type='quantitative' />
            <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2238289016808878084]' derivation='None' name='[none:Calculation_2238289016808878084:nk]' pivot='key' type='nominal' />
            <column-instance column='[depth]' derivation='None' name='[none:depth:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
            <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
            <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' included-values='in-range'>
            <min>7.0</min>
            <max>9.0999999999999996</max>
          </filter>
          <filter class='categorical' column='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]'>
            <groupfilter from='2000' function='range' level='[yr:Timestamp Column (copy)_2238289015424241665:ok]' to='2023' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</column>
            <column>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' />
              <lod column='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:Calculation_2238289016808878084:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Depth Cat:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Depth:&#9;</run>
                <run bold='true'><![CDATA[<[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Count of Depth Cat:&#9;</run>
                <run bold='true'>&lt; SUM(Depth Cat)&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</rows>
        <cols>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</cols>
      </table>
      <simple-id uuid='{15961729-AEB2-4C7A-A603-3D1DE1FED56A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='5' type-v2='layout-basic' w='87500' x='500' y='889'>
              <zone h='98222' id='3' name='total_eq' w='87500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='184' h='98222' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='11500' x='88000' y='889'>
              <zone h='14333' id='30' name='total_count' w='11500' x='88000' y='889'>
                <layout-cache fixed-size-h='121' minwidth='100' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7222' id='10' name='total_eq' pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='11500' x='88000' y='15222'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='650' h='73111' id='19' is-fixed='true' name='total_eq_bar' w='11500' x='88000' y='22444'>
                <layout-cache minwidth='136' type-h='cell' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='47' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='98222' id='3' is-fixed='true' name='total_eq' w='87500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7222' id='10' name='total_eq' pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='11500' x='88000' y='15222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='121' h='14333' id='30' is-fixed='true' name='total_count' w='11500' x='88000' y='889'>
                  <layout-cache fixed-size-h='121' minwidth='100' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73111' id='19' is-fixed='true' name='total_eq_bar' w='11500' x='88000' y='22444'>
                  <layout-cache minwidth='136' type-h='cell' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{88CC8FD7-6AFB-4534-A430-A20CBCF269EB}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='22' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='18' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='14' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone h='98222' id='12' type-v2='layout-basic' w='99000' x='500' y='889'>
                  <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
                    <zone h='98222' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
                      <zone h='98222' id='10' name='total_eq (3)' w='67187' x='32313' y='889'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='98222' id='11' name='EQ_BAr' w='31813' x='500' y='889'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7556' id='23' name='EQ_BAr' pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]' show-title='false' type-v2='color' w='9625' x='23000' y='6778' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='46' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='98222' id='11' is-fixed='true' name='EQ_BAr' w='31813' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7556' id='23' name='EQ_BAr' pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]' show-title='false' type-v2='color' w='9625' x='23000' y='6778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98222' id='10' is-fixed='true' name='total_eq (3)' w='67187' x='32313' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{ACFB668C-D07C-4E0A-B89F-E396A44F4501}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='78667' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='78667' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
              <zone h='78667' id='3' name='total_eq_bar (3)' w='49500' x='500' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='78667' id='10' name='total_eq_bar (4)' w='49500' x='50000' y='889'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='19555' id='12' name='total_eq_bar (5)' w='99000' x='500' y='79556'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='10222' id='9' name='total_eq_bar (3)' pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type-v2='color' w='8750' x='43688' y='2111' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='26' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='25' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='78667' id='3' is-fixed='true' name='total_eq_bar (3)' w='49500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10222' id='9' name='total_eq_bar (3)' pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type-v2='color' w='8750' x='43688' y='2111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='78667' id='10' is-fixed='true' name='total_eq_bar (4)' w='49500' x='50000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='168' h='19555' id='12' is-fixed='true' name='total_eq_bar (5)' w='99000' x='500' y='79556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DBDDB6AB-D2B6-4389-AFE0-FBCE5FE5CAB2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Final'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#faf4e7' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='wwe_cln (earthquake_historical_data)' name='federated.02orwg31hd08q31g8bl8o1p826c7' />
      </datasources>
      <datasource-dependencies datasource='federated.02orwg31hd08q31g8bl8o1p826c7'>
        <column caption='Year' datatype='datetime' name='[Timestamp Column (copy)_2238289015424241665]' role='dimension' type='quantitative'>
          <calculation class='tableau' formula='[timestamp_column]' />
        </column>
        <column caption='Mag' datatype='real' name='[mag]' role='measure' type='quantitative' />
        <column-instance column='[mag]' derivation='None' name='[none:mag:qk]' pivot='key' type='quantitative' />
        <column-instance column='[timestamp_column]' derivation='None' name='[none:timestamp_column:qk]' pivot='key' type='quantitative' />
        <column caption='Timestamp Column' datatype='datetime' name='[timestamp_column]' role='dimension' type='ordinal' />
        <column-instance column='[Timestamp Column (copy)_2238289015424241665]' derivation='Year' name='[yr:Timestamp Column (copy)_2238289015424241665:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='73307' id='7' param='horz' type-v2='layout-flow' w='98828' x='586' y='7422'>
            <zone h='73307' id='5' type-v2='layout-basic' w='98828' x='586' y='7422'>
              <zone h='65007' id='10' name='total_eq_bar (3)' w='39019' x='50000' y='15722'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='65007' id='12' name='total_eq_bar' w='10395' x='89019' y='15722'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73307' id='16' name='Sheet 1 (2)' w='49414' x='586' y='7422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8300' id='13' mode='checkdropdown' name='total_eq_bar' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' type-v2='filter' w='10422' x='88992' y='7422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8300' id='17' name='Sheet 1 (2)' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14285' x='50000' y='7422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8300' id='9' name='total_eq_bar (5)' pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' show-title='false' type-v2='color' w='10423' x='78569' y='7422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8300' id='8' name='total_eq_bar (5)' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14284' x='64285' y='7422'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='18229' id='3' name='total_eq_bar (5)' w='98828' x='586' y='80729'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone forceUpdate='true' h='6380' id='20' type-v2='text' w='98828' x='586' y='1042'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontsize='18'>USGS Earthquake Analysis 2022-2023</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7031' id='19' name='Sheet 1 (2)' pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='6808' x='15593' y='72656' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='29' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='6380' id='20' type-v2='text' w='98828' x='586' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='18'>USGS Earthquake Analysis 2022-2023</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8300' id='17' name='Sheet 1 (2)' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14285' x='50000' y='7422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73307' id='16' is-fixed='true' name='Sheet 1 (2)' w='49414' x='586' y='7422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7031' id='19' name='Sheet 1 (2)' pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='6808' x='15593' y='72656'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65007' id='10' is-fixed='true' name='total_eq_bar (3)' w='39019' x='50000' y='15722'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8300' id='13' mode='checkdropdown' name='total_eq_bar' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' type-v2='filter' w='10422' x='88992' y='7422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65007' id='12' is-fixed='true' name='total_eq_bar' w='10395' x='89019' y='15722'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8300' id='8' name='total_eq_bar (5)' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='14284' x='64285' y='7422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='132' h='18229' id='3' is-fixed='true' name='total_eq_bar (5)' w='98828' x='586' y='80729'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8300' id='9' name='total_eq_bar (5)' pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' show-title='false' type-v2='color' w='10423' x='78569' y='7422'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F9AEEE28-52CE-4B88-A72E-E1A486A7DD0F}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='dep_mag_map'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='35' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
            <zone h='98222' id='7' param='horz' type-v2='layout-flow' w='99000' x='500' y='889'>
              <zone h='98222' id='5' type-v2='layout-basic' w='99000' x='500' y='889'>
                <zone h='98222' id='3' name='Sheet 1 (2)' w='49500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='98222' id='33' name='gdp_map' w='49500' x='50000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8444' id='10' name='Sheet 1 (2)' pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='8750' x='23500' y='82556' />
        <zone h='8444' id='12' name='Sheet 1 (2)' pane-specification-id='3' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type-v2='color' w='8750' x='23563' y='78556' />
        <zone h='11222' id='36' name='gdp_map' pane-specification-id='4' param='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]' type-v2='color' w='11188' x='75938' y='80333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='49' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='280' h='98222' id='3' is-fixed='true' name='Sheet 1 (2)' w='49500' x='500' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8444' id='10' name='Sheet 1 (2)' pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type-v2='color' w='8750' x='23500' y='82556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8444' id='12' name='Sheet 1 (2)' pane-specification-id='3' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type-v2='color' w='8750' x='23563' y='78556'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98222' id='33' is-fixed='true' name='gdp_map' w='49500' x='50000' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11222' id='36' name='gdp_map' pane-specification-id='4' param='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]' type-v2='color' w='11188' x='75938' y='80333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{98D5D21D-75F5-4791-A8AB-90FB9E021EA2}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='EQ_BAr'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='total_eq (3)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{75CE7997-A59A-4852-9D04-312C1F4EDC7D}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='total_count' />
        <viewpoint name='total_eq'>
          <zoom type='entire-view' />
          <highlight field='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='total_eq_bar'>
          <zoom type='fit-height' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{6A321580-2C9B-4713-840B-A8904F0BF139}' />
    </window>
    <window class='dashboard' name='dep_mag_map'>
      <viewpoints>
        <viewpoint name='Sheet 1 (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='gdp_map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{27D67C9D-D6B2-429E-AB7E-C1FFFF224143}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='total_eq_bar (3)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='total_eq_bar (4)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total_eq_bar (5)' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C5C49EBF-454E-4D9C-9E6A-77376D81225D}' />
    </window>
    <window class='dashboard' maximized='true' name='Final'>
      <viewpoints>
        <viewpoint name='Sheet 1 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total_eq_bar'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='total_eq_bar (3)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total_eq_bar (5)'>
          <highlight>
            <color-one-way>
              <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{3630625B-1A29-4ED1-8438-740B245D3874}' />
    </window>
    <window class='worksheet' hidden='true' name='EQ_BAr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016496164866:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37971298-A9A7-4EB2-9EDB-E1CFE1D82667}' />
    </window>
    <window class='worksheet' hidden='true' name='Sheet 1 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' type='size' />
            <card pane-specification-id='3' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]' type='size' />
            <card pane-specification-id='3' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:depth:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:latitude:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:longitude:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:timestamp_column:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA1EF324-58CE-429C-9571-C70686F961C2}' />
    </window>
    <window class='worksheet' hidden='true' name='gdp_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Calculation_2238289016817356805:nk]</field>
            <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Country:nk]</field>
            <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Literacy (%):nk]</field>
            <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Pop. Density (per sq. mi.):nk]</field>
            <field>[federated.08bubmt0lfvgw4176hd5h1a8ffy7].[none:Population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{829ECD66-7EC8-4576-99C4-9254BE9C8113}' />
    </window>
    <window class='worksheet' hidden='true' name='total_count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0EBA945-29E5-4461-9CF1-6015908D9AF2}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:ok]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:timestamp_column:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F861E214-5D9E-4883-BEFA-609F26A1C4DC}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[attr:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:timestamp_column:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:timestamp_column:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AA1DF2C8-0FC7-4B25-A684-6704EDC2CDB1}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]' type='filter' />
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[cnt:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E5FDC4CC-7D1B-4EDE-ACA9-0AFABF1DC622}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq_bar (3)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[:Measure Names]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC063F8E-FEE7-475C-8B8C-871DB67E101B}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq_bar (4)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[:Measure Names]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5F20E1A-08EE-452F-88BD-675A3913BDD7}' />
    </window>
    <window class='worksheet' hidden='true' name='total_eq_bar (5)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[:Measure Names]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:Calculation_2238289016808878084:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:depth:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:id:nk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[none:mag:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[tyr:Timestamp Column (copy)_2238289015424241665:qk]</field>
            <field>[federated.02orwg31hd08q31g8bl8o1p826c7].[yr:Timestamp Column (copy)_2238289015424241665:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1AAE22C-CBF9-4C4D-8E2C-5B64C4E6D5ED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      XLVwAO2fZQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Final' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='dep_mag_map' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
